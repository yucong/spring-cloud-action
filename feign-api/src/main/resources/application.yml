
spring:
  application:
    name: feign-api


server:
  port: 9008
  # 配置全局的GZIP压缩
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain
    
eureka:
  client:
    service-url:
      defaultZone: http://eurekaserver1:8761/eureka/

  instance:
    prefer-ip-address: true
    instance-id: ${spring.cloud.client.ip-address}:${server.port} 


#feign:
#  compression:
#    request:
#      enabled: true
#      min-request-size: 512
#      mime-types: text/xml,application/xml,application/json
#    response:
#      enabled: true


feign:
  # 开启feign中的HttpClient底层应用
  httpclient:
    enabled: true
  # 开启feign中的服务降级
  hystrix:
    enabled: true


#########################################################
##             Feign的超时配置                                                                     ##
#########################################################
# 1 超时策略的使用优先级： 指定服务的超时策略 -> 全局配置的超时策略 -> 默认的超时策略(默认1s) 
    
# 2 全局服务配置(商业项目中不推荐使用)
#ribbon:
#  # 请求连接的超时时间 默认的时间为1秒
#  ConnectTimeout: 5000
#  # 请求处理的超时时间
#  ReadTimeout: 5000
  
ribbon:
  # 对所有操作请求都进行重试
  OkToRetryOnAllOperations: true
  # 对当前实例的重试次数
  MaxAutoRetries: 2
  # 请求连接的超时时间
  ConnectTimeout: 3000
  # 请求处理的超时时间
  ReadTimeout: 3000


# 点对点直连测试时关闭ribbon访问注册中心Eureka Server发现服务
#ribbon:
#  eureka:
#    enabled: false
    

    
# 3 部分服务配置
#feign-service:
#  ribbon:
#    # 对所有操作请求都进行重试
#    OkToRetryOnAllOperations: true
#    # 对当前实例的重试次数
#    MaxAutoRetries: 1
#    # 请求连接的超时时间
#    ConnectTimeout: 3000
#    # 请求处理的超时时间
#    ReadTimeout: 3000
    
    # 点对点直连测试,还需要配合以下两个操作
    # 1、需要去掉@EnableDiscoveryClient
    # 2、需要关闭ribbon访问注册中心EurekaServer，ribbon.eureka.enabled=false
    # listOfServers: localhost:9000
    
#########################################################
##             Feign的服务降级                                                                     ##
#########################################################
#hystrix:
#  command:
#    "FirstClientFeignService#testFeign()":
#      fallback:
#        enabled: true    
#    "FirstClientFeignService#getById(Long)":
#      fallback:
#        enabled: true
#    "FirstClientFeignService#getByIdWithPOST(Long)":
#      fallback:
#        enabled: true

hystrix:
  command:
    default:
      fallback:
        # 当执行失败或者请求被拒绝，是否会尝试调用fallback方法 。默认true
        enabled: true
      
      # Execution相关的属性的配置：
      execution:
        timeout:
          # 执行是否启用超时，默认启用true，只在线程池隔离中有效。
          enabled: true
        isolation:
          # 隔离策略，默认是THREAD, 可选THREAD｜SEMAPHORE
          strategy: THREAD
          thread:
            #命令执行超时时间，默认1000ms，只在线程池隔离中有效。
            timeoutInMilliseconds: 10000
            # 发生超时是是否中断，默认true，只在线程池隔离中有效。
            interruptOnTimeout: true
      
      # Circuit Breaker相关的属性
      circuitBreaker:
        # 是否开启熔断器。默认true
        enabled: true
        # 一个rolling window内最小的请求数。
        # 如果设为20，那么当一个rolling window的时间内（比如说1个rolling window是10毫秒）收到19个请求，
        # 即使19个请求都失败，也不会触发circuit break。默认20 
        requestVolumeThreshold: 10
        # 触发短路的时间值，
        # 当该值设为5000时，则当触发circuit break后的5000毫秒内都会拒绝远程服务调用，
        # 也就是5000毫秒后才会重试远程服务调用。默认5000
        sleepWindowInMilliseconds: 5000
        
        
        